library(TOSI)
example("gsspFactorm")
library(help = 'TOSI')
library(TOSI)
n <- 100; p <- 100
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
G1list <- list(c(2, (s0+1):p), c(3, (s0+1):p),c(4, (s0+1):p))
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MeanMax(dat1$X, 1:p, seed=2)
# ex1: H01 is true
MeanMax(dat1$X, p, seed=2)
library(TOSI)
n <- 100; p <- 100
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
G1list <- list(c(2, (s0+1):p), c(3, (s0+1):p),c(4, (s0+1):p))
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MeanMax(dat1$X, 1:p, seed=2)
# ex1: H01 is true
MeanMax(dat1$X, p, seed=2)
### Example
n <- 100; p <- 100; i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MeanMax(dat1$X, 1:p, seed=2)
# ex1: H01 is true
MeanMax(dat1$X, p, seed=2)
library(TOSI)
n <- 100; p <- 100; i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MeanMax(dat1$X, 1:p, seed=2)
# ex1: H01 is true
MeanMax(dat1$X, p, seed=2)
?MeanMax
n <- 100; p <- 100; i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMax(dat1$X, 1:p, seed=2)
# ex1: H01 is true
MultiMeanMax(dat1$X, p, seed=2)
n <- 100; p <- 100
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMax(dat1$X, 1:p)
# ex1: H01 is true
MultiMeanMax(dat1$X, p)
n <- 100; p <- 100; i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MeanMin(dat1$X, 1:s0, seed=2)
# ex1: H01 is true
MeanMin(dat1$X, 1:p, seed=2)
mean(dat$X)
apply(dat1$X, 2, mean)
n <- 100; p <- 100; i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 2; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MeanMin(dat1$X, 1:s0, seed=2)
### Example
n <- 100; p <- 100; i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 2; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MeanMin(dat1$X, 1:s0, seed=2)
# ex1: H01 is true
MeanMin(dat1$X, 1:p, seed=2)
MeanMin(dat1$X, 1:s0, seed=1)
n <- 100; p <- 100
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMin(dat1$X, 1:s0)
# ex1: H01 is true
MultiMeanMin(dat1$X, 1:p)
### Example
n <- 100; p <- 100
s0 <- 5 # First five components are nonzeros
rho <- 2; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMin(dat1$X, 1:s0)
# ex1: H01 is true
MultiMeanMin(dat1$X, 1:p)
### Example
n <- 100; p <- 100
s0 <- 5 # First five components are nonzeros
rho <- 2; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMin(dat1$X, 1:s0)
# ex1: H01 is true
MultiMeanMin(dat1$X, 1:p)
### Example
n <- 100; p <- 100; i <- 2
s0 <- 5 # First five components are nonzeros
rho <- 2; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMin(dat1$X, 1:s0)
# ex1: H01 is true
MultiMeanMin(dat1$X, 1:p)
### Example
n <- 100; p <- 100; i <- 2
s0 <- 5 # First five components are nonzeros
rho <- 2; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMin(dat1$X, 1:s0)
# ex1: H01 is true
MultiMeanMin(dat1$X, 1:p)
n <- 100; p <- 100; i <- 2
s0 <- 5 # First five components are nonzeros
rho <- 5; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMin(dat1$X, 1:s0)
# ex1: H01 is true
MultiMeanMin(dat1$X, 1:p)
n <- 100; p <- 100; i <- 2
s0 <- 5 # First five components are nonzeros
rho <- 5; tau <- 1;
dat1 <- gendata_Mean(n, p, s0, seed=i, rho, tau)
# ex1: H01 is false
MultiMeanMin(dat1$X, 1:s0)
# ex1: H01 is true
MultiMeanMin(dat1$X, 1:p)
library(TOSI)
?MultiMeanMax
?MultiMeanMin
gendata_Reg(n=100, p = 100, s0=3)
dat <- gendata_Reg(n=100, p = 100, s0=3)
str(dat)
### Example
n <- 100; p <- 100; i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
dat1 <- gendata_Reg(n, p, s0, seed=i, rho)
# ex1: H01 is false
RegMax(dat1$X,dat1$Y, 1:p, seed=2)
# ex1: H01 is true
RegMax(dat1$X,dat1$Y, p, seed=2)
n <- 100; p <- 100; i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 5;
dat1 <- gendata_Reg(n, p, s0, seed=i, rho)
# ex1: H01 is false
RegMin(dat1$X, 1:s0, seed=2)
# ex1: H01 is true
RegMin(dat1$X, 1:p, seed=2)
# ex1: H01 is false
RegMin(dat1$X,dat1$Y, 1:s0, seed=2)
# ex1: H01 is true
RegMin(dat1$X,dat1$Y, 1:p, seed=2)
n <- 100; p <- 20;i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 1; tau <- 1;
dat1 <- gendata_Reg(n, p, s0, seed=i, rho)
# ex1: H01 is false
MultiRegMax(dat1$X, dat1$Y, 1:p)
# ex1: H01 is true
MultiRegMax(dat1$X, dat1$Y, p)
n <- 100; p <- 20;i <- 1
s0 <- 5 # First five components are nonzeros
rho <- 5;
dat1 <- gendata_Reg(n, p, s0, seed=i, rho)
# ex1: H01 is false
MultiRegMin(dat1$X, dat1$Y, 1:s0)
# ex1: H01 is true
MultiRegMin(dat1$X, dat1$Y, p)
library(TOSI)
example("assessBFun")
library(TOSI)
example("assessBFun")
example("bic.spfac")
example("cv.spfac")
library(TOSI)
example("cv.spfac")
example("Factorm")
examp(gendata_Fac())
examp(gendata_Fac
)
example("gendata_Fac")
example("gendata_Mean")
example("gendata_Reg")
example("gsspFactorm")
library(TOSI)
example("gsspFactorm")
example("MeanMax")
example("MeanMin")
example("MultiMeanMax")
example("MultiMeanMin")
example("MultiRegMax")
example("MultiRegMin")
example("MultiTSrowMaxST")
example("MultiTSrowMinST")
example(RegMax)
example("RegMin")
example("TSentryMaxST")
example("TSentryMinST")
example("TSrowMaxST")
example("TSrowMinST")
n <- 100; p <- 50
s0 <-  3#
rho <- 3# 3
i <- 3
dat1 <- gendata_Reg(n, p, s0, rho, seed=i)
res <- linReg_TOSI(dat1$X, dat1$Y, alpha=0.05, seed=1, sub.frac=0.3, standardized=F)
set.seed(1)
n <- 100
p <- 20
s0 <- 3
set <- 1:s0
Sigma <- matrix(NA, p, p)
for (i in 1:p) Sigma[i,] <- 0.3^(abs(i-(1:p)))
X <- matrix(rnorm(n*p), n, p)
X <- t(t(chol(Sigma))%*%t(X))
beta <- rep(0,p)
beta[1:s0] <- runif(s0,0,2) +1
# Only first three coefficients are not zeros
Y <- X %*%beta+rt(n,4)/sqrt(2)
lml <- linReg_olinfer(X,Y)
lml
lml <- linReg_TOSI(X,Y)
library(glmnet)
p <- ncol(X)
cvlist <- cv.glmnet(X,Y)
id_lambdamin <- which.min(cvlist$cvm)
glmlist <- glmnet(X, Y,lambda=cvlist$lambda[id_lambdamin])
index_nz <- which(glmlist$beta !=0)
stmin1 <- RegMin(X, Y,index_nz, alpha, seed, sub.frac, standardized);
sub.frac=0.3
standardized=F
seed=1
alpha=0.05
library(glmnet)
p <- ncol(X)
cvlist <- cv.glmnet(X,Y)
id_lambdamin <- which.min(cvlist$cvm)
glmlist <- glmnet(X, Y,lambda=cvlist$lambda[id_lambdamin])
index_nz <- which(glmlist$beta !=0)
stmin1 <- RegMin(X, Y,index_nz, alpha, seed, sub.frac, standardized);
Tmin <- stmin1[1,4] > alpha
index_zero <- setdiff(1:p, index_nz)
stmax1 <- RegMax(X, Y,  index_zero, alpha, seed, sub.frac, standardized);
Tmax <-  stmax1[1,4] > alpha
# Seek the optimal lambda by Dichotomy optimization
leftside <- 0; rightside <- id_lambdamin
k <- 1
linReg_TOSI <- function(X, Y, alpha=0.05, seed=1, sub.frac=0.3, standardized=F){
library(glmnet)
p <- ncol(X)
cvlist <- cv.glmnet(X,Y)
id_lambdamin <- which.min(cvlist$cvm)
glmlist <- glmnet(X, Y,lambda=cvlist$lambda[id_lambdamin])
index_nz <- which(glmlist$beta !=0)
stmin1 <- RegMin(X, Y,index_nz, alpha, seed, sub.frac, standardized);
Tmin <- stmin1[1,4] > alpha
index_zero <- setdiff(1:p, index_nz)
stmax1 <- RegMax(X, Y,  index_zero, alpha, seed, sub.frac, standardized);
Tmax <-  stmax1[1,4] > alpha
# Seek the optimal lambda by Dichotomy optimization
leftside <- 0; rightside <- id_lambdamin
k <- 1
while(Tmin ==T || Tmax==F){
if(k > 5) break
id_lambda <- round((leftside + rightside)/2)
glmlist <- glmnet(X, Y,lambda=cvlist$lambda[id_lambda])
index_nz <- which(glmlist$beta !=0)
stmin1 <- RegMin(X, Y,index_nz, alpha, seed, sub.frac, standardized);
Tmin <- stmin1[1,4] > alpha
if(Tmin){
rightside <- id_lambda
}
if(!Tmin){
leftside <- id_lambda
index_zero <- setdiff(1:p, index_nz)
stmax1 <- RegMax(X, Y,  index_zero, alpha, seed, sub.frac, standardized);
Tmax <-  stmax1[1,4] > alpha
}
cat('Searching penalty parameter for', k, '-th round\n')
k <- k +1
}
Xind <- X[,index_nz]
datXY <- data.frame(Y, Xind)
colnames(datXY) <- c('y', paste0('x',index_nz))
lmreg <- lm(y~., data=datXY)
slmreg <- list()
slmreg$lmreg <- lmreg
slmreg$glmnet <- glmlist
slmreg$Infer <- list(min_test=stmin1, max_test = stmax1)
return(slmreg)
}
linReg_TOSI(X,Y)
n <- 100; p <- 50
s0 <-  3#
rho <- 3# 3
i <- 3
dat1 <- gendata_Reg(n, p, s0, rho, seed=i)
res <- linReg_TOSI(dat1$X, dat1$Y, alpha=0.05, seed=1, sub.frac=0.3, standardized=F)
res
library(TOSI)
example("linReg_TOSI")
res
library(devtools)
install_github('feiyoung/TOSI')
install_github('feiyoung/TOSI')
R.version
library(TOSI)
library(TOSI)
library(TOSI)
library(TOSI)
library(TOSI)
library(TOSI)
library(TOSI)
example("MultiTSrowMaxST")
example("MultiTSrowMinST")
